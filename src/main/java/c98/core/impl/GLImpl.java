package c98.core.impl;

import java.util.LinkedList;

import static net.minecraft.client.renderer.GlStateManager.*;

public class GLImpl {
	boolean alpha_enabled;
	int alpha_func;
	float alpha_ref;
	boolean lighting_enabled;
	boolean lights_enabled0;
	boolean lights_enabled1;
	boolean lights_enabled2;
	boolean lights_enabled3;
	boolean lights_enabled4;
	boolean lights_enabled5;
	boolean lights_enabled6;
	boolean lights_enabled7;
	boolean colorMaterial_enabled;
	int colorMaterial_face;
	int colorMaterial_mode;
	boolean blend_enabled;
	int blend_sf;
	int blend_sfa;
	int blend_df;
	int blend_dfa;
	boolean depth_enabled;
	boolean depth_mask;
	int depth_func;
	boolean fog_enabled;
	int fog_mode;
	float fog_density;
	float fog_start;
	float fog_end;
	boolean cull_enabled;
	int cull_face;
	boolean polygonOffset_fill;
	boolean polygonOffset_line;
	float polygonOffset_factor;
	float polygonOffset_units;
	boolean colorLogic_enabled;
	int colorLogic_op;
	boolean texGen_s_enable;
	int texGen_s_coord;
	int texGen_s_param;
	boolean texGen_t_enable;
	int texGen_t_coord;
	int texGen_t_param;
	boolean texGen_r_enable;
	int texGen_r_coord;
	int texGen_r_param;
	boolean texGen_q_enable;
	int texGen_q_coord;
	int texGen_q_param;
	double clear_depth;
	float clear_a;
	float clear_r;
	float clear_g;
	float clear_b;
	int stencil_a_a;
	int stencil_a_b;
	int stencil_a_c;
	int stencil_b;
	int stencil_c;
	int stencil_d;
	int stencil_e;
	boolean normalize_enable;
	int currentTexture;
	boolean texture_enabled0;
	int texture_current0;
	boolean texture_enabled1;
	int texture_current1;
	boolean texture_enabled2;
	int texture_current2;
	boolean texture_enabled3;
	int texture_current3;
	boolean texture_enabled4;
	int texture_current4;
	boolean texture_enabled5;
	int texture_current5;
	boolean texture_enabled6;
	int texture_current6;
	boolean texture_enabled7;
	int texture_current7;
	int shadeModel;
	boolean rescaleNormal_enable;
	boolean colorMask_a;
	boolean colorMask_r;
	boolean colorMask_g;
	boolean colorMask_b;
	float color_a;
	float color_r;
	float color_g;
	float color_b;

	private void store() { //TODO this should be cleaned up.
		alpha_enabled = alphaState.alphaTest.currentState;
		alpha_func = alphaState.func;
		alpha_ref = alphaState.ref;
		lighting_enabled = lightingState.currentState;
		lights_enabled0 = lightState[0].currentState;
		lights_enabled1 = lightState[1].currentState;
		lights_enabled2 = lightState[2].currentState;
		lights_enabled3 = lightState[3].currentState;
		lights_enabled4 = lightState[4].currentState;
		lights_enabled5 = lightState[5].currentState;
		lights_enabled6 = lightState[6].currentState;
		lights_enabled7 = lightState[7].currentState;
		colorMaterial_enabled = colorMaterialState.colorMaterial.currentState;
		colorMaterial_face = colorMaterialState.face;
		colorMaterial_mode = colorMaterialState.mode;
		blend_enabled = blendState.blend.currentState;
		blend_sf = blendState.srcFactor;
		blend_sfa = blendState.srcFactorAlpha;
		blend_df = blendState.dstFactor;
		blend_dfa = blendState.dstFactorAlpha;
		depth_enabled = depthState.depthTest.currentState;
		depth_mask = depthState.maskEnabled;
		depth_func = depthState.depthFunc;
		fog_enabled = fogState.fog.currentState;
		fog_mode = fogState.mode;
		fog_density = fogState.density;
		fog_start = fogState.start;
		fog_end = fogState.end;
		cull_enabled = cullState.cullFace.currentState;
		cull_face = cullState.mode;
		polygonOffset_fill = polygonOffsetState.polygonOffsetFill.currentState;
		polygonOffset_line = polygonOffsetState.polygonOffsetLine.currentState;
		polygonOffset_factor = polygonOffsetState.factor;
		polygonOffset_units = polygonOffsetState.units;
		colorLogic_enabled = colorLogicState.colorLogicOp.currentState;
		colorLogic_op = colorLogicState.opcode;
		texGen_s_enable = texGenState.s.textureGen.currentState;
		texGen_s_coord = texGenState.s.coord;
		texGen_s_param = texGenState.s.param;
		texGen_t_enable = texGenState.t.textureGen.currentState;
		texGen_t_coord = texGenState.t.coord;
		texGen_t_param = texGenState.t.param;
		texGen_r_enable = texGenState.r.textureGen.currentState;
		texGen_r_coord = texGenState.r.coord;
		texGen_r_param = texGenState.r.param;
		texGen_q_enable = texGenState.q.textureGen.currentState;
		texGen_q_coord = texGenState.q.coord;
		texGen_q_param = texGenState.q.param;
		clear_depth = clearState.depth;
		clear_a = clearState.color.alpha;
		clear_r = clearState.color.red;
		clear_g = clearState.color.green;
		clear_b = clearState.color.blue;
		stencil_a_a = stencilState.field_179078_a.field_179081_a;
		stencil_a_b = stencilState.field_179078_a.field_179079_b;
		stencil_a_c = stencilState.field_179078_a.field_179080_c;
		stencil_b = stencilState.field_179076_b;
		stencil_c = stencilState.field_179077_c;
		stencil_d = stencilState.field_179074_d;
		stencil_e = stencilState.field_179075_e;
		normalize_enable = normalizeState.currentState;
		currentTexture = activeTextureUnit;
		texture_enabled0 = textureState[0].texture2DState.currentState;
		texture_current0 = textureState[0].textureName;
		texture_enabled1 = textureState[1].texture2DState.currentState;
		texture_current1 = textureState[1].textureName;
		texture_enabled2 = textureState[2].texture2DState.currentState;
		texture_current2 = textureState[2].textureName;
		texture_enabled3 = textureState[3].texture2DState.currentState;
		texture_current3 = textureState[3].textureName;
		texture_enabled4 = textureState[4].texture2DState.currentState;
		texture_current4 = textureState[4].textureName;
		texture_enabled5 = textureState[5].texture2DState.currentState;
		texture_current5 = textureState[5].textureName;
		texture_enabled6 = textureState[6].texture2DState.currentState;
		texture_current6 = textureState[6].textureName;
		texture_enabled7 = textureState[7].texture2DState.currentState;
		texture_current7 = textureState[7].textureName;
		shadeModel = activeShadeModel;
		rescaleNormal_enable = rescaleNormalState.currentState;
		colorMask_a = colorMaskState.alpha;
		colorMask_r = colorMaskState.red;
		colorMask_g = colorMaskState.green;
		colorMask_b = colorMaskState.blue;
		color_a = colorState.alpha;
		color_r = colorState.green;
		color_g = colorState.green;
		color_b = colorState.blue;
	}

	private void load() {
		alphaState.alphaTest.currentState = alpha_enabled;
		alphaState.func = alpha_func;
		alphaState.ref = alpha_ref;
		lightingState.currentState = lighting_enabled;
		lightState[0].currentState = lights_enabled0;
		lightState[1].currentState = lights_enabled1;
		lightState[2].currentState = lights_enabled2;
		lightState[3].currentState = lights_enabled3;
		lightState[4].currentState = lights_enabled4;
		lightState[5].currentState = lights_enabled5;
		lightState[6].currentState = lights_enabled6;
		lightState[7].currentState = lights_enabled7;
		colorMaterialState.colorMaterial.currentState = colorMaterial_enabled;
		colorMaterialState.face = colorMaterial_face;
		colorMaterialState.mode = colorMaterial_mode;
		blendState.blend.currentState = blend_enabled;
		blendState.srcFactor = blend_sf;
		blendState.srcFactorAlpha = blend_sfa;
		blendState.dstFactor = blend_df;
		blendState.dstFactorAlpha = blend_dfa;
		depthState.depthTest.currentState = depth_enabled;
		depthState.maskEnabled = depth_mask;
		depthState.depthFunc = depth_func;
		fogState.fog.currentState = fog_enabled;
		fogState.mode = fog_mode;
		fogState.density = fog_density;
		fogState.start = fog_start;
		fogState.end = fog_end;
		cullState.cullFace.currentState = cull_enabled;
		cullState.mode = cull_face;
		polygonOffsetState.polygonOffsetFill.currentState = polygonOffset_fill;
		polygonOffsetState.polygonOffsetLine.currentState = polygonOffset_line;
		polygonOffsetState.factor = polygonOffset_factor;
		polygonOffsetState.units = polygonOffset_units;
		colorLogicState.colorLogicOp.currentState = colorLogic_enabled;
		colorLogicState.opcode = colorLogic_op;
		texGenState.s.textureGen.currentState = texGen_s_enable;
		texGenState.s.coord = texGen_s_coord;
		texGenState.s.param = texGen_s_param;
		texGenState.t.textureGen.currentState = texGen_t_enable;
		texGenState.t.coord = texGen_t_coord;
		texGenState.t.param = texGen_t_param;
		texGenState.r.textureGen.currentState = texGen_r_enable;
		texGenState.r.coord = texGen_r_coord;
		texGenState.r.param = texGen_r_param;
		texGenState.q.textureGen.currentState = texGen_q_enable;
		texGenState.q.coord = texGen_q_coord;
		texGenState.q.param = texGen_q_param;
		clearState.depth = clear_depth;
		clearState.color.alpha = clear_a;
		clearState.color.red = clear_r;
		clearState.color.green = clear_g;
		clearState.color.blue = clear_b;
		stencilState.field_179078_a.field_179081_a = stencil_a_a;
		stencilState.field_179078_a.field_179079_b = stencil_a_b;
		stencilState.field_179078_a.field_179080_c = stencil_a_c;
		stencilState.field_179076_b = stencil_b;
		stencilState.field_179077_c = stencil_c;
		stencilState.field_179074_d = stencil_d;
		stencilState.field_179075_e = stencil_e;
		normalizeState.currentState = normalize_enable;
		activeTextureUnit = currentTexture;
		textureState[0].texture2DState.currentState = texture_enabled0;
		textureState[0].textureName = texture_current0;
		textureState[1].texture2DState.currentState = texture_enabled1;
		textureState[1].textureName = texture_current1;
		textureState[2].texture2DState.currentState = texture_enabled2;
		textureState[2].textureName = texture_current2;
		textureState[3].texture2DState.currentState = texture_enabled3;
		textureState[3].textureName = texture_current3;
		textureState[4].texture2DState.currentState = texture_enabled4;
		textureState[4].textureName = texture_current4;
		textureState[5].texture2DState.currentState = texture_enabled5;
		textureState[5].textureName = texture_current5;
		textureState[6].texture2DState.currentState = texture_enabled6;
		textureState[6].textureName = texture_current6;
		textureState[7].texture2DState.currentState = texture_enabled7;
		textureState[7].textureName = texture_current7;
		activeShadeModel = shadeModel;
		rescaleNormalState.currentState = rescaleNormal_enable;
		colorMaskState.alpha = colorMask_a;
		colorMaskState.red = colorMask_r;
		colorMaskState.green = colorMask_g;
		colorMaskState.blue = colorMask_b;
		colorState.alpha = color_a;
		colorState.green = color_r;
		colorState.green = color_g;
		colorState.blue = color_b;
	}

	private static LinkedList<GLImpl> stack = new LinkedList();

	public static void pushAttrib() {
		GLImpl state = new GLImpl();
		state.store();
		stack.push(state);
	}

	public static void popAttrib() {
		GLImpl state = stack.pop();
		state.load();
	}
}
