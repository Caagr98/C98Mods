package c98.core.impl.asm;

import java.util.ArrayList;
import net.minecraft.client.Minecraft;
import net.minecraft.client.gui.GuiScreen;
import net.minecraft.client.renderer.Tessellator;
import net.minecraftforge.fml.client.*;
import net.minecraftforge.fml.common.*;
import org.lwjgl.Sys;
import c98.core.C98Core;
import c98.core.XCube;
import c98.core.launch.ASMer;

@ASMer class ForgeModMenu extends GuiModList {
	public static class ForgeStatic {
		public static XCube xCube = new XCube();
		public static ModContainer c98ModContainer;
		static {
			ModMetadata meta = new ModMetadata();
			meta.modId = "C98Mods";
			meta.name = "C98Mods";
			meta.version = "";
			meta.autogenerated = true;
			c98ModContainer = new DummyModContainer(meta);
		}
	}
	
	@ASMer static class ClientHandler extends FMLClientHandler {
		@Override public void addSpecialModEntries(ArrayList<ModContainer> mods) {
			mods.add(ForgeStatic.c98ModContainer);
			super.addSpecialModEntries(mods);
		}
	}
	
	@ASMer static class ForgeModMenuList extends GuiSlotModList {
		public ForgeModMenuList(GuiModList parent, ArrayList<ModContainer> mods, int listWidth) {
			super(parent, mods, listWidth);
		}
		
		@Override protected void drawSlot(int listIndex, int var2, int var3, int var4, Tessellator var5) {
			ModContainer mod = mods.get(listIndex);
			if(mod == ForgeStatic.c98ModContainer) {
				int x = left + 3;
				int y = var3 + 2;
				Minecraft.getMinecraft().fontRendererObj.drawString(mod.getName(), x + 28, y + 10, 0xFFFFFF);
				ForgeStatic.xCube.drawImage(x + 4, y + 1);
			} else super.drawSlot(listIndex, var2, var3, var4, var5);
		}
	}
	
	public ForgeModMenu(GuiScreen m) {
		super(m);
	}
	
	@Override public void initGui() {
		listWidth = Math.max(listWidth, fontRendererObj.getStringWidth(ForgeStatic.c98ModContainer.getName()) + 28);
		super.initGui();
	}
	
	@Override public void selectModIndex(int index) {
		if(mods.get(index) == ForgeStatic.c98ModContainer) Sys.openURL(C98Core.URL);
		else super.selectModIndex(index);
	}
	
	@Override public void drawScreen(int mouseX, int mouseY, float partialTicks) {
		super.drawScreen(mouseX, mouseY, partialTicks);
		ForgeStatic.xCube.tooltip();
	}
}
